{"version":3,"sources":["App.js","index.js"],"names":["App","useState","theme","setTheme","title","setTitle","titleValue","setTitleValue","get","SetGet","person","setPerson","data","setData","loading","setLoading","fetchData","a","fetch","res","json","result","results","name","first","last","email","phone","age","registered","password","login","location","street","number","newPerson","useEffect","handleHover","e","target","classList","contains","dataset","label","dark-theme","className","onClick","map","item","key","id","src","picture","large","alt","style","border","data-label","onMouseOver","type","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAiGeA,MAnFf,WAAgB,IAAD,EACUC,mBAAS,SADnB,mBACRC,EADQ,KACFC,EADE,OAEUF,mBAAS,QAFnB,mBAERG,EAFQ,KAEFC,EAFE,OAGoBJ,mBAAS,IAH7B,mBAGRK,EAHQ,KAGGC,EAHH,OAIMN,oBAAS,GAJf,mBAIRO,EAJQ,KAIJC,EAJI,OAKcR,mBAAS,MALvB,mBAKNS,EALM,KAKCC,EALD,OAMQV,mBAAS,IANjB,mBAMRW,EANQ,KAMHC,EANG,OAOcZ,oBAAS,GAPvB,mBAORa,EAPQ,KAOAC,EAPA,KASPC,EAAS,uCAAG,sDAAAC,EAAA,sEACEC,MAZV,8BAWQ,cACVC,EADU,gBAEKA,EAAIC,OAFT,OAEVC,EAFU,OAGhBR,EAAQQ,GACRZ,GAAO,GACDC,EAASW,EAAOC,QAAQ,GALd,EAOQZ,EAAOa,KAAvBC,EAPQ,EAORA,MAAOC,EAPC,EAODA,KACPC,EAAiBhB,EAAjBgB,MAAOC,EAAUjB,EAAViB,MACPC,EAAQlB,EAAOmB,WAAfD,IACAE,EAAapB,EAAOqB,MAApBD,SAVQ,EAWiBpB,EAAOsB,SAAhCC,OAAQC,EAXA,EAWAA,OAAOX,EAXP,EAWOA,KAEjBY,EAAY,CAChBZ,KAAK,GAAD,OAAKC,EAAL,YAAcC,GAClBC,QACAC,QACAC,MACAE,WACAG,OAAO,GAAD,OAAIC,EAAJ,YAAcX,IAGtBZ,EAAUwB,GACV5B,EAAc4B,EAAUZ,MAvBR,4CAAH,qDA0Bfa,qBAAU,WACRpB,MACA,CAACF,IAEH,IAAMuB,EAAc,SAACC,GAChBA,EAAEC,OAAOC,UAAUC,SAAS,UAC7BpC,EAASiC,EAAEC,OAAOG,QAAQC,OAC1BpC,EAAcG,EAAO4B,EAAEC,OAAOG,QAAQC,UAS1C,OACE,0BAAMC,aAAY1C,GAChB,yBAAK2C,UAAU,oBACf,4BAAQC,QARQ,WAElB3C,EAD2B,UAAVD,EAAoB,OAAS,WAO5C,UACA,yBAAK2C,UAAU,SACVrC,GACCI,EAAKU,QAAQyB,KAAI,SAACC,GAChB,OACE,yBAAKH,UAAU,YAAYI,IAAKD,EAAKE,IACnC,yBAAKC,IAAKH,EAAKI,QAAQC,MAAOC,IAAI,QAClC,uBAAGT,UAAU,cAAb,MAA8BzC,EAA9B,OACA,uBAAGyC,UAAU,cAAcvC,GAC3B,yBAAKuC,UAAU,eAEb,4BAAQU,MAAO,CAACC,OAAO,mBAAoBX,UAAU,OAAOY,aAAW,OAAOC,YAAarB,GAAa,kBAAC,IAAD,OACxG,4BAAQQ,UAAU,OAAOY,aAAW,QAAQC,YAAarB,GAAa,kBAAC,IAAD,OACtE,4BAAQQ,UAAU,OAAOY,aAAW,MAAMC,YAAarB,GAAa,kBAAC,IAAD,OACpE,4BAAQQ,UAAU,OAAOY,aAAW,SAASC,YAAarB,GAAa,kBAAC,IAAD,OACvE,4BAAQQ,UAAU,OAAOY,aAAW,QAAQC,YAAarB,GAAa,kBAAC,IAAD,OACtE,4BAAQQ,UAAU,OAAOY,aAAW,WAAWC,YAAarB,GAAa,kBAAC,IAAD,QAG3E,4BAAQQ,UAAU,MAAMc,KAAK,SAASb,QAAS,kBAAI/B,GAAW,SAAA6C,GAAI,OAAGA,OAArE,sBClFlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.78376f71.chunk.js","sourcesContent":["import React\n, { useState, useEffect }\n from 'react'\nimport {\n  FaEnvelopeOpen,\n  FaUser,\n  FaCalendarTimes,\n  FaMap,\n  FaPhone,\n  FaLock,\n} from 'react-icons/fa'\n\nconst url = 'https://randomuser.me/api/'\n\nfunction App() {\n  let [theme,setTheme] = useState('light')\n  let [title,setTitle] = useState('name');\n  let [titleValue,setTitleValue] = useState('');\n  let [get,SetGet] = useState(false);\n  const [person,setPerson] = useState(null);\n  let [data,setData] = useState({});\n  let [loading,setLoading] = useState(false);\n\n  const fetchData = async () =>{\n    const res = await fetch(url);\n    const result = await res.json();\n    setData(result);\n    SetGet(true);\n    const person = result.results[0];\n\n    const { first, last } = person.name;\n    const { email, phone } = person;\n    const { age } = person.registered;\n    const { password } = person.login;\n    const { street:{number,name} } = person.location;\n\n    const newPerson = {\n      name: `${first} ${last}`,\n      email,\n      phone,\n      age,\n      password,\n      street:`${number} ${name}`,\n    }\n\n    setPerson(newPerson);\n    setTitleValue(newPerson.name);\n  }\n  \n  useEffect(()=>{\n    fetchData();\n  },[loading]);\n  \n  const handleHover = (e) =>{\n    if(e.target.classList.contains('icon')){\n      setTitle(e.target.dataset.label);\n      setTitleValue(person[e.target.dataset.label]);\n    }\n  };\n\n  const changeTheme = () =>{\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  }\n\n  return (\n    <main dark-theme={theme}>\n      <div className='block bcg-black'></div>\n      <button onClick={changeTheme}>toggle</button>\n      <div className='block'>\n          {get &&\n            data.results.map((item)=>{\n              return(\n                <div className='container' key={item.id}>\n                  <img src={item.picture.large} alt='img'></img>\n                  <p className='user-title'>my {title} is</p>\n                  <p className='user-value'>{titleValue}</p>\n                  <div className='values-list'>\n                    \n                    <button style={{border:'2px solid black'}} className='icon' data-label='name' onMouseOver={handleHover}><FaEnvelopeOpen/></button>\n                    <button className='icon' data-label='email' onMouseOver={handleHover}><FaUser/></button>\n                    <button className='icon' data-label='age' onMouseOver={handleHover}><FaCalendarTimes/></button>\n                    <button className='icon' data-label='street' onMouseOver={handleHover}><FaMap/></button>\n                    <button className='icon' data-label='phone' onMouseOver={handleHover}><FaPhone/></button>\n                    <button className='icon' data-label='password' onMouseOver={handleHover}><FaLock/></button>\n                    \n                  </div>\n                  <button className='btn' type='button' onClick={()=>setLoading(prev=>!prev)}>random user</button>\n              </div>\n              )\n            })\n          }\n      </div>\n    </main>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}